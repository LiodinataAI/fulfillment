<html lang="en" class="scroll-smooth">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Orders & Roadmap Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
  />
  <link
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap"
    rel="stylesheet"
  />
  <style>
    body {
      font-family: 'Inter', sans-serif;
    }
    /* Scrollbar for modal content */
    .modal-content::-webkit-scrollbar {
      width: 8px;
    }
    .modal-content::-webkit-scrollbar-thumb {
      background-color: #a0aec0;
      border-radius: 4px;
    }
  </style>
</head>
<body class="bg-gray-50 min-h-screen flex flex-col">
  <header class="bg-white shadow p-4 sticky top-0 z-30">
    <div class="max-w-7xl mx-auto flex items-center justify-between">
      <h1 class="text-2xl font-semibold text-gray-800">Orders & Roadmap Dashboard</h1>
      <nav class="space-x-4 text-gray-600 font-medium text-sm sm:text-base">
        <button
          id="tab-orders-roadmap"
          class="text-blue-600 border-b-2 border-blue-600 pb-1 focus:outline-none"
          aria-current="page"
        >
          Fulfillment Roadmap
        </button>
        <button
          id="tab-other"
          class="hover:text-blue-600 focus:outline-none"
          aria-current="false"
        >
          Assurance 
        </button>
      </nav>
    </div>
  </header>

  <main class="flex-grow max-w-7xl mx-auto p-4 sm:p-6 lg:p-8 w-full">
    <!-- Orders & Roadmap Tab Content -->
    <section id="orders-roadmap-tab" class="block">
      <!-- Summary Cards -->
      <div class="grid grid-cols-1 sm:grid-cols-3 gap-6 mb-8">
        <!-- OLO Card -->
        <div class="bg-white rounded-lg shadow p-6 flex flex-col">
          <div class="flex items-center justify-between mb-3">
            <h2 class="text-lg font-semibold text-gray-700">OLO Orders</h2>
            <i class="fas fa-network-wired text-blue-600 text-xl"></i>
          </div>
          <div class="flex justify-between text-gray-600 text-sm mb-2">
            <span>Total</span>
            <span id="olo-total">0</span>
          </div>
          <div class="flex justify-between text-green-600 font-semibold mb-1">
            <span>Completed</span>
            <span id="olo-completed">0</span>
          </div>
          <div class="flex justify-between text-yellow-600 font-semibold">
            <span>In Progress</span>
            <span id="olo-inprogress">0</span>
          </div>
        </div>

        <!-- New Site Card -->
        <div class="bg-white rounded-lg shadow p-6 flex flex-col">
          <div class="flex items-center justify-between mb-3">
            <h2 class="text-lg font-semibold text-gray-700">New Site Orders</h2>
            <i class="fas fa-building text-green-600 text-xl"></i>
          </div>
          <div class="flex justify-between text-gray-600 text-sm mb-2">
            <span>Total</span>
            <span id="newsite-total">0</span>
          </div>
          <div class="flex justify-between text-green-600 font-semibold mb-1">
            <span>Completed</span>
            <span id="newsite-completed">0</span>
          </div>
          <div class="flex justify-between text-yellow-600 font-semibold">
            <span>In Progress</span>
            <span id="newsite-inprogress">0</span>
          </div>
        </div>

        <!-- SD WAN Card -->
        <div class="bg-white rounded-lg shadow p-6 flex flex-col">
          <div class="flex items-center justify-between mb-3">
            <h2 class="text-lg font-semibold text-gray-700">SD WAN Orders</h2>
            <i class="fas fa-cloud text-purple-600 text-xl"></i>
          </div>
          <div class="flex justify-between text-gray-600 text-sm mb-2">
            <span>Total</span>
            <span id="sdwan-total">0</span>
          </div>
          <div class="flex justify-between text-green-600 font-semibold mb-1">
            <span>Completed</span>
            <span id="sdwan-completed">0</span>
          </div>
          <div class="flex justify-between text-yellow-600 font-semibold">
            <span>In Progress</span>
            <span id="sdwan-inprogress">0</span>
          </div>
        </div>
      </div>
      <!-- Add Data Button -->
<div class="mb-4 flex justify-end">
  <button
    id="add-data-btn"
    class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition focus:outline-none focus:ring-2 focus:ring-blue-400"
  >
    <i class="fas fa-plus mr-2"></i> Add Data
  </button>
</div>
      <!-- Filters -->
      <div class="mb-4 flex flex-col sm:flex-row sm:items-center sm:space-x-4 space-y-3 sm:space-y-0">
        <div class="flex items-center space-x-2">
          <label for="filter-type" class="font-medium text-gray-700">Order Type:</label>
          <select
            id="filter-type"
            class="rounded border border-gray-300 px-3 py-1.5 text-gray-700 focus:ring-2 focus:ring-blue-500 focus:outline-none"
          >
            <option value="all" selected>All</option>
            <option value="OLO">OLO</option>
            <option value="New Site">New Site</option>
            <option value="SD WAN">SD WAN</option>
          </select>
        </div>
        <div class="flex items-center space-x-2">
          <label for="filter-status" class="font-medium text-gray-700">Status:</label>
          <select
            id="filter-status"
            class="rounded border border-gray-300 px-3 py-1.5 text-gray-700 focus:ring-2 focus:ring-blue-500 focus:outline-none"
          >
            <option value="all" selected>All</option>
            <option value="Completed">Completed</option>
            <option value="In Progress">In Progress</option>
          </select>
        </div>
        <div class="flex-1 min-w-0">
          <input
            type="text"
            id="filter-search"
            placeholder="Search by Order ID or Customer"
            class="w-full rounded border border-gray-300 px-3 py-1.5 text-gray-700 focus:ring-2 focus:ring-blue-500 focus:outline-none"
          />
        </div>
      </div>

      <!-- Orders Table -->
      <div class="overflow-x-auto bg-white rounded-lg shadow">
        <table class="min-w-full divide-y divide-gray-200" aria-label="Orders Table">
          <thead class="bg-gray-100">
            <tr>
              <th scope="col" class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Order ID</th>
              <th scope="col" class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Customer</th>
              <th scope="col" class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Order Type</th>
              <th scope="col" class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Status</th>
              <th scope="col" class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Progress Step</th>
              <th scope="col" class="px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider">Roadmap</th>
            </tr>
          </thead>
          <tbody id="orders-table-body" class="divide-y divide-gray-200">
            <!-- Rows inserted by JS -->
          </tbody>
        </table>
      </div>
    </section>
  </main>

  <!-- Modal -->
  <div
    id="roadmap-modal"
    class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50 hidden"
    aria-modal="true"
    role="dialog"
    aria-labelledby="roadmap-modal-title"
    aria-describedby="roadmap-modal-desc"
  >
    <div class="bg-white rounded-lg shadow-lg max-w-3xl w-full max-h-[90vh] overflow-y-auto modal-content p-6 relative">
      <button
        id="modal-close-btn"
        class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 focus:outline-none"
        aria-label="Close modal"
      >
        <i class="fas fa-times text-2xl"></i>
      </button>
      <h3 id="roadmap-modal-title" class="text-xl font-semibold text-gray-800 mb-4">Order Roadmap</h3>
      <div id="roadmap-modal-desc" class="space-y-8">
        <!-- Roadmap content inserted by JS -->
      </div>
    </div>
  </div>

  <script>
    // Sample orders data
    const orders = [
      {
        id: 'OLO-001',
        customer: 'PT. Nusantara Jaya',
        type: 'OLO',
        status: 'Completed',
        progressStep: 'OA',
        roadmapPath: 'complex',
      },
      {
        id: 'OLO-002',
        customer: 'CV. Sukses Makmur',
        type: 'OLO',
        status: 'In Progress',
        progressStep: 'Penarikan',
        roadmapPath: 'simple',
      },
      {
        id: 'OLO-003',
        customer: 'PT. Maju Terus',
        type: 'OLO',
        status: 'In Progress',
        progressStep: 'PT 1',
        roadmapPath: 'complex',
      },
      {
        id: 'NewSite-001',
        customer: 'PT. Bumi Indah',
        type: 'New Site',
        status: 'In Progress',
        progressStep: 'Penggelaran kabel',
      },
      {
        id: 'NewSite-002',
        customer: 'PT. Sejahtera Abadi',
        type: 'New Site',
        status: 'Completed',
        progressStep: 'OA',
      },
      {
        id: 'NewSite-003',
        customer: 'CV. Prima Jaya',
        type: 'New Site',
        status: 'In Progress',
        progressStep: 'Terminasi OTB/ODP',
      },
      {
        id: 'SDWAN-001',
        customer: 'PT. Digital Nusantara',
        type: 'SD WAN',
        status: 'Completed',
        progressStep: 'OA',
        roadmapPath: 'simple',
      },
      {
        id: 'SDWAN-002',
        customer: 'PT. Teknologi Cerdas',
        type: 'SD WAN',
        status: 'In Progress',
        progressStep: 'Desain JT',
        roadmapPath: 'complex',
      },
      {
        id: 'SDWAN-003',
        customer: 'CV. Solusi Jaringan',
        type: 'SD WAN',
        status: 'In Progress',
        progressStep: 'Progress JT',
        roadmapPath: 'complex',
      },
      {
        id: 'OLO-004',
        customer: 'PT. Lintas Data',
        type: 'OLO',
        status: 'Completed',
        progressStep: 'On Air',
        roadmapPath: 'simple',
      },
      {
        id: 'NewSite-004',
        customer: 'PT. Cahaya Timur',
        type: 'New Site',
        status: 'In Progress',
        progressStep: 'Pemasangan SW/ONT/SFP',
      },
      {
        id: 'SDWAN-004',
        customer: 'PT. Jaringan Prima',
        type: 'SD WAN',
        status: 'Completed',
        progressStep: 'OA',
        roadmapPath: 'simple',
      },
      {
        id: 'OLO-005',
        customer: 'CV. Mitra Koneksi',
        type: 'OLO',
        status: 'In Progress',
        progressStep: 'Order JT',
        roadmapPath: 'complex',
      },
      {
        id: 'NewSite-005',
        customer: 'PT. Sumber Rejeki',
        type: 'New Site',
        status: 'Completed',
        progressStep: 'OA',
      },
      {
        id: 'SDWAN-005',
        customer: 'PT. Network Solusi',
        type: 'SD WAN',
        status: 'In Progress',
        progressStep: 'PT 1',
        roadmapPath: 'complex',
      },
    ];

    // Roadmap steps definitions
    const roadmapSteps = {
      OLO: {
        simple: [
          'Survey',
          'Menunggu Order OA',
          'Penarikan',
          'On Air',
        ],
        complex: [
          'Survey',
          'Desain JT',
          'Order JT',
          'Progress JT',
          'PT 1',
          'OA',
        ],
      },
      'SD WAN': {
        simple: [
          'Survey',
          'Menunggu Order OA',
          'Penarikan',
          'On Air',
        ],
        complex: [
          'Survey',
          'Desain JT',
          'Order JT',
          'Progress JT',
          'PT 1',
          'OA',
        ],
      },
      'New Site': {
        default: [
          'Survey',
          'DRM',
          'Pengiriman Material',
          'Penggelaran kabel',
          'Terminasi OTB/ODP',
          'Pemasangan SW/ONT/SFP',
          'OA',
        ],
      },
    };

    // Utility: get counts for summary cards
    function updateSummaryCards() {
      const types = ['OLO', 'New Site', 'SD WAN'];
      types.forEach((type) => {
        const filtered = orders.filter((o) => o.type === type);
        const total = filtered.length;
        const completed = filtered.filter((o) => o.status === 'Completed').length;
        const inprogress = filtered.filter((o) => o.status === 'In Progress').length;

        document.getElementById(type.toLowerCase().replace(' ', '') + '-total').textContent = total;
        document.getElementById(type.toLowerCase().replace(' ', '') + '-completed').textContent = completed;
        document.getElementById(type.toLowerCase().replace(' ', '') + '-inprogress').textContent = inprogress;
      });
    }

    // Render orders table rows
    function renderOrdersTable(filteredOrders) {
      const tbody = document.getElementById('orders-table-body');
      tbody.innerHTML = '';

      if (filteredOrders.length === 0) {
        const tr = document.createElement('tr');
        const td = document.createElement('td');
        td.colSpan = 6;
        td.className = 'px-4 py-6 text-center text-gray-500';
        td.textContent = 'No orders found.';
        tr.appendChild(td);
        tbody.appendChild(tr);
        return;
      }

      filteredOrders.forEach((order) => {
        const tr = document.createElement('tr');

        // Order ID
        const tdId = document.createElement('td');
        tdId.className = 'px-4 py-3 whitespace-nowrap text-sm text-gray-700 font-mono';
        tdId.textContent = order.id;
        tr.appendChild(tdId);

        // Customer
        const tdCustomer = document.createElement('td');
        tdCustomer.className = 'px-4 py-3 whitespace-nowrap text-sm text-gray-700';
        tdCustomer.textContent = order.customer;
        tr.appendChild(tdCustomer);

        // Order Type
        const tdType = document.createElement('td');
        tdType.className = 'px-4 py-3 whitespace-nowrap text-sm font-semibold';
        let typeColor = 'text-gray-700';
        if (order.type === 'OLO') typeColor = 'text-blue-600';
        else if (order.type === 'New Site') typeColor = 'text-green-600';
        else if (order.type === 'SD WAN') typeColor = 'text-purple-600';
        tdType.classList.add(typeColor);
        tdType.textContent = order.type;
        tr.appendChild(tdType);

        // Status
        const tdStatus = document.createElement('td');
        tdStatus.className = 'px-4 py-3 whitespace-nowrap text-sm font-semibold';
        if (order.status === 'Completed') {
          tdStatus.classList.add('text-green-600');
        } else if (order.status === 'In Progress') {
          tdStatus.classList.add('text-yellow-600');
        } else {
          tdStatus.classList.add('text-gray-600');
        }
        tdStatus.textContent = order.status;
        tr.appendChild(tdStatus);

        // Progress Step
        const tdProgress = document.createElement('td');
        tdProgress.className = 'px-4 py-3 whitespace-nowrap text-sm text-gray-700';
        tdProgress.textContent = order.progressStep;
        tr.appendChild(tdProgress);

        // Roadmap button
        const tdButton = document.createElement('td');
        tdButton.className = 'px-4 py-3 whitespace-nowrap text-center';

        const btn = document.createElement('button');
        btn.type = 'button';
        btn.className =
          'inline-flex items-center px-3 py-1.5 border border-blue-600 text-blue-600 rounded hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500';
        btn.textContent = 'View Roadmap';
        btn.setAttribute('aria-label', `View roadmap for order ${order.id}`);
        btn.addEventListener('click', () => openRoadmapModal(order));
        tdButton.appendChild(btn);

        tr.appendChild(tdButton);

        tbody.appendChild(tr);
      });
    }

    // Filter orders based on filter inputs
    function filterOrders() {
      const typeFilter = document.getElementById('filter-type').value;
      const statusFilter = document.getElementById('filter-status').value;
      const searchFilter = document.getElementById('filter-search').value.trim().toLowerCase();

      let filtered = orders;

      if (typeFilter !== 'all') {
        filtered = filtered.filter((o) => o.type === typeFilter);
      }
      if (statusFilter !== 'all') {
        filtered = filtered.filter((o) => o.status === statusFilter);
      }
      if (searchFilter !== '') {
        filtered = filtered.filter(
          (o) =>
            o.id.toLowerCase().includes(searchFilter) ||
            o.customer.toLowerCase().includes(searchFilter)
        );
      }

      renderOrdersTable(filtered);
    }

    // Create roadmap visualization for modal
    function createRoadmapVisualization(order) {
      const container = document.createElement('div');
      container.className = 'space-y-6';

      // Title with order info
      const title = document.createElement('h4');
      title.className = 'text-lg font-semibold text-gray-800';
      title.textContent = `Roadmap for Order ${order.id} (${order.type})`;
      container.appendChild(title);

      // Determine roadmap steps array
      let steps = [];
      if (order.type === 'New Site') {
        steps = roadmapSteps['New Site'].default;
      } else if (order.type === 'OLO' || order.type === 'SD WAN') {
        if (order.roadmapPath === 'complex') {
          steps = roadmapSteps[order.type].complex;
        } else {
          steps = roadmapSteps[order.type].simple;
        }
      }

      // Create horizontal stepper with icons and labels
      const stepper = document.createElement('ol');
      stepper.className =
        'flex flex-col sm:flex-row sm:space-x-6 space-y-6 sm:space-y-0';

      steps.forEach((step, index) => {
        const stepItem = document.createElement('li');
        stepItem.className = 'flex items-center sm:flex-col sm:items-center sm:text-center flex-1';

        // Circle with step number or check icon if completed
        const circle = document.createElement('div');
        circle.className =
          'flex items-center justify-center w-10 h-10 rounded-full border-2 border-gray-300 flex-shrink-0';

        // Determine if step is completed, current, or pending
        const orderStepIndex = steps.indexOf(order.progressStep);
        let isCompleted = false;
        let isCurrent = false;
        if (orderStepIndex === -1) {
          // If progressStep not found, treat all as pending
          isCompleted = false;
          isCurrent = false;
        } else {
          if (index < orderStepIndex) isCompleted = true;
          else if (index === orderStepIndex) isCurrent = true;
        }

        if (isCompleted) {
          circle.classList.remove('border-gray-300');
          circle.classList.add('bg-green-600', 'border-green-600');
          const checkIcon = document.createElement('i');
          checkIcon.className = 'fas fa-check text-white';
          circle.appendChild(checkIcon);
        } else if (isCurrent) {
          circle.classList.remove('border-gray-300');
          circle.classList.add('bg-yellow-500', 'border-yellow-500');
          const currentIcon = document.createElement('i');
          currentIcon.className = 'fas fa-spinner fa-spin text-white';
          circle.appendChild(currentIcon);
        } else {
          circle.classList.remove('bg-green-600', 'bg-yellow-500', 'border-green-600', 'border-yellow-500');
          circle.classList.add('border-gray-300');
          const numSpan = document.createElement('span');
          numSpan.className = 'text-gray-500 font-semibold';
          numSpan.textContent = index + 1;
          circle.appendChild(numSpan);
        }

        stepItem.appendChild(circle);

        // Label
        const label = document.createElement('span');
        label.className = 'ml-4 sm:ml-0 sm:mt-2 text-gray-700 font-medium text-sm sm:text-base';
        label.textContent = step;
        stepItem.appendChild(label);

        // Connector line except last step
        if (index !== steps.length - 1) {
          const connector = document.createElement('div');
          connector.className =
            'hidden sm:block flex-1 border-t-2 border-gray-300 mt-5';
          stepItem.appendChild(connector);
        }

        stepper.appendChild(stepItem);
      });

      container.appendChild(stepper);

      // Add a legend below
      const legend = document.createElement('div');
      legend.className = 'mt-8 flex flex-wrap gap-6 text-sm text-gray-600';

      const legendItems = [
        { color: 'bg-green-600', label: 'Completed' },
        { color: 'bg-yellow-500', label: 'Current Step' },
        { color: 'border-gray-300', label: 'Pending' },
      ];

      legendItems.forEach(({ color, label }) => {
        const item = document.createElement('div');
        item.className = 'flex items-center space-x-2';

        const box = document.createElement('div');
        box.className = `w-5 h-5 rounded-full ${color} border-2 border-gray-300 flex-shrink-0`;
        if (color === 'border-gray-300') {
          box.classList.remove('bg-green-600', 'bg-yellow-500');
          box.classList.add('bg-white');
        }
        item.appendChild(box);

        const text = document.createElement('span');
        text.textContent = label;
        item.appendChild(text);

        legend.appendChild(item);
      });

      container.appendChild(legend);

      return container;
    }

    // Open modal and show roadmap
    function openRoadmapModal(order) {
      const modal = document.getElementById('roadmap-modal');
      const content = modal.querySelector('#roadmap-modal-desc');
      content.innerHTML = '';
      content.appendChild(createRoadmapVisualization(order));
      modal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
      // Focus close button for accessibility
      modal.querySelector('#modal-close-btn').focus();
    }

    // Close modal
    function closeRoadmapModal() {
      const modal = document.getElementById('roadmap-modal');
      modal.classList.add('hidden');
      document.body.style.overflow = '';
    }

    // Event listeners for filters
    document.getElementById('filter-type').addEventListener('change', filterOrders);
    document.getElementById('filter-status').addEventListener('change', filterOrders);
    document.getElementById('filter-search').addEventListener('input', filterOrders);

    // Modal close button
    document.getElementById('modal-close-btn').addEventListener('click', closeRoadmapModal);

    // Close modal on outside click
    document.getElementById('roadmap-modal').addEventListener('click', (e) => {
      if (e.target.id === 'roadmap-modal') {
        closeRoadmapModal();
      }
    });

    // Close modal on Escape key
    window.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        const modal = document.getElementById('roadmap-modal');
        if (!modal.classList.contains('hidden')) {
          closeRoadmapModal();
        }
      }
    });

    // Initialize dashboard
    function init() {
      updateSummaryCards();
      renderOrdersTable(orders);
    }

    init();
  </script>
</body>
</html>
